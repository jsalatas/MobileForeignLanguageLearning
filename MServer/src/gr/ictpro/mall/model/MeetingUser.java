package gr.ictpro.mall.model;

// Generated Mar 10, 2016 8:58:08 PM by Hibernate Tools 4.0.0

import gr.ictpro.mall.interceptors.ClientReferenceClass;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * MeetingUser generated by hbm2java
 */
@Entity
@Table(name = "meeting_user")
@ClientReferenceClass(className="gr.ictpro.mall.client.model.vo.Notification")
public class MeetingUser implements java.io.Serializable {

    private MeetingUserId id;
    private Meeting meeting;
    private User user;
    private User approvedBy;

    public MeetingUser() {
    }

    public MeetingUser(MeetingUserId id, Meeting meeting, User user) {
	this.id = id;
	this.meeting = meeting;
	this.user = user;
    }

    public MeetingUser(MeetingUserId id, Meeting meeting, User user, User approvedBy) {
	this.id = id;
	this.meeting = meeting;
	this.user = user;
	this.approvedBy = approvedBy;
    }

    @EmbeddedId
    @AttributeOverrides({
	    @AttributeOverride(name = "meetingId", column = @Column(name = "meeting_id", nullable = false)),
	    @AttributeOverride(name = "userId", column = @Column(name = "user_id", nullable = false)) })
    public MeetingUserId getId() {
	return this.id;
    }

    public void setId(MeetingUserId id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "meeting_id", nullable = false, insertable = false, updatable = false)
    public Meeting getMeeting() {
	return this.meeting;
    }

    public void setMeeting(Meeting meeting) {
	this.meeting = meeting;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable = false, insertable = false, updatable = false)
    public User getUser() {
	return this.user;
    }

    public void setUser(User user) {
	this.user = user;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "approved_by")
    public User ApprovedBy() {
	return this.approvedBy;
    }

    public void setApprovedBy(User approvedBy) {
	this.approvedBy = approvedBy;
    }

}
