package gr.ictpro.mall.model;

// Generated Oct 3, 2015 2:40:56 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * StudyClass generated by hbm2java
 */
@Entity
@Table(name = "study_class")
public class StudyClass implements java.io.Serializable {

    private Integer id;
    private String name;
    private String notes;
    private Set<Translation> translations = new HashSet<Translation>(0);
    private Set<User> users = new HashSet<User>(0);

    public StudyClass() {
    }

    public StudyClass(String name) {
	this.name = name;
    }

    public StudyClass(String name, String notes, Set<Translation> translations, Set<User> users) {
	this.name = name;
	this.notes = notes;
	this.translations = translations;
	this.users = users;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
	return this.id;
    }

    public void setId(Integer id) {
	this.id = id;
    }

    @Column(name = "name", nullable = false, length = 50)
    public String getName() {
	return this.name;
    }

    public void setName(String name) {
	this.name = name;
    }

    @Column(name = "notes", length = 65535, columnDefinition="Text")
    public String getNotes() {
	return this.notes;
    }

    public void setNotes(String notes) {
	this.notes = notes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "studyClass")
    public Set<Translation> getTranslations() {
	return this.translations;
    }

    public void setTranslations(Set<Translation> translations) {
	this.translations = translations;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "study_class_user", joinColumns = {
	    @JoinColumn(name = "class_id", nullable = false, updatable = false) }, inverseJoinColumns = {
	    @JoinColumn(name = "user_id", nullable = false, updatable = false) })
    public Set<User> getUsers() {
	return this.users;
    }

    public void setUsers(Set<User> users) {
	this.users = users;
    }

}
