package gr.ictpro.mall.model;

// Generated Jan 11, 2016 9:44:52 PM by Hibernate Tools 4.0.0

import gr.ictpro.mall.interceptors.ClientReferenceClass;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.flex.core.io.AmfIgnore;

/**
 * Schedule generated by hbm2java
 */
@Entity
@Table(name = "schedule")
@ClientReferenceClass(className= {"gr.ictpro.mall.client.model.vo.Calendar", "gr.ictpro.mall.client.model.vo.Notification"})
public class Schedule implements java.io.Serializable {
    /**
     * 
     */
    private static final long serialVersionUID = -262087619913346332L;
    
    private Integer id;
    private int day;
    private String description;
    private Date endTime;
    private int repeatInterval;
    private Date repeatUntil;
    private Date startTime;
    private int repeatEvery;
    private User user;
    private Classroom classroom;
    private Set<Calendar> calendarEntries = new HashSet<Calendar>(0);

    public Schedule() {
    }

    public Schedule(int day, String description, Date endTime, int repeatInterval, Date repeatUntil, Date startTime,
	    int repeatEvery) {
	this.day = day;
	this.description = description;
	this.endTime = endTime;
	this.repeatInterval = repeatInterval;
	this.repeatUntil = repeatUntil;
	this.startTime = startTime;
	this.repeatEvery = repeatEvery;
    }

    public Schedule(int day, String description, User user, Classroom classroom, Date endTime, int repeatInterval, Date repeatUntil, Date startTime,
	    int repeatEvery, Set<Calendar> calendarEntries) {
	this.day = day;
	this.description = description;
	this.endTime = endTime;
	this.repeatInterval = repeatInterval;
	this.repeatUntil = repeatUntil;
	this.startTime = startTime;
	this.repeatEvery = repeatEvery;
	this.calendarEntries = calendarEntries;
	this.user = user;
	this.classroom = classroom;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
	return this.id;
    }

    public void setId(Integer id) {
	this.id = id;
    }

    @Column(name = "day", nullable = false)
    public int getDay() {
	return this.day;
    }

    public void setDay(int day) {
	this.day = day;
    }

    @Column(name = "description", nullable = false, length = 255)
    public String getDescription() {
	return this.description;
    }

    public void setDescription(String description) {
	this.description = description;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "user_id")
    public User getUser() {
	return this.user;
    }

    public void setUser(User user) {
	this.user = user;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "classroom_id")
    public Classroom getClassroom() {
	return this.classroom;
    }

    public void setClassroom(Classroom classroom) {
	this.classroom = classroom;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", nullable = false, length = 19)
    public Date getEndTime() {
	return this.endTime;
    }

    public void setEndTime(Date endTime) {
	this.endTime = endTime;
    }

    @Column(name = "repeat_interval", nullable = false)
    public int getRepeatInterval() {
	return this.repeatInterval;
    }

    public void setRepeatInterval(int repeatInterval) {
	this.repeatInterval = repeatInterval;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "repeat_until", nullable = false, length = 19)
    public Date getRepeatUntil() {
	return this.repeatUntil;
    }

    public void setRepeatUntil(Date repeatUntil) {
	this.repeatUntil = repeatUntil;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = false, length = 19)
    public Date getStartTime() {
	return this.startTime;
    }

    public void setStartTime(Date startTime) {
	this.startTime = startTime;
    }

    @Column(name = "repeat_every", nullable = false)
    public int getRepeatEvery() {
	return this.repeatEvery;
    }

    public void setRepeatEvery(int repeatEvery) {
	this.repeatEvery = repeatEvery;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "schedule")
    @AmfIgnore
    public Set<Calendar> getCalendarEntries() {
	return this.calendarEntries;
    }

    public void setCalendarEntries(Set<Calendar> calendarEntries) {
	this.calendarEntries = calendarEntries;
    }

}
