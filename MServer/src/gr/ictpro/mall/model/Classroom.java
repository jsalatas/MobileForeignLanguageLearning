package gr.ictpro.mall.model;

// Generated Dec 13, 2015 3:42:01 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Classroom generated by hbm2java
 */
@Entity
@Table(name = "classroom"
	, uniqueConstraints = @UniqueConstraint(columnNames = { "name", "language_code" }))
public class Classroom implements java.io.Serializable {

    private Integer id;
    private Language language;
    private String name;
    private String notes;
    private Set<Translation> translations = new HashSet<Translation>(0);
    private Set<Classroomgroup> classroomgroups = new HashSet<Classroomgroup>(0);
    private Set<EmailTranslation> emailTranslations = new HashSet<EmailTranslation>(0);
    private Set<User> users = new HashSet<User>(0);

    public Classroom() {
    }

    public Classroom(String name) {
	this.name = name;
    }

    public Classroom(Language language, String name, String notes, Set<Translation> translations,
	    Set<Classroomgroup> classroomgroups, Set<EmailTranslation> emailTranslations, Set<User> users) {
	this.language = language;
	this.name = name;
	this.notes = notes;
	this.translations = translations;
	this.classroomgroups = classroomgroups;
	this.emailTranslations = emailTranslations;
	this.users = users;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
	return this.id;
    }

    public void setId(Integer id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "language_code")
    public Language getLanguage() {
	return this.language;
    }

    public void setLanguage(Language language) {
	this.language = language;
    }

    @Column(name = "name", nullable = false, length = 50)
    public String getName() {
	return this.name;
    }

    public void setName(String name) {
	this.name = name;
    }

    @Column(name = "notes", length = 65535, columnDefinition="Text")
    public String getNotes() {
	return this.notes;
    }

    public void setNotes(String notes) {
	this.notes = notes;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "classroom")
    public Set<Translation> getTranslations() {
	return this.translations;
    }

    public void setTranslations(Set<Translation> translations) {
	this.translations = translations;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "classroom_classroomgroup", joinColumns = {
	    @JoinColumn(name = "classroom_id", nullable = false, updatable = false) }, inverseJoinColumns = {
	    @JoinColumn(name = "group_id", nullable = false, updatable = false) })
    public Set<Classroomgroup> getClassroomgroups() {
	return this.classroomgroups;
    }

    public void setClassroomgroups(Set<Classroomgroup> classroomgroups) {
	this.classroomgroups = classroomgroups;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "classroom")
    public Set<EmailTranslation> getEmailTranslations() {
	return this.emailTranslations;
    }

    public void setEmailTranslations(Set<EmailTranslation> emailTranslations) {
	this.emailTranslations = emailTranslations;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "classroom_user", joinColumns = {
	    @JoinColumn(name = "class_id", nullable = false, updatable = false) }, inverseJoinColumns = {
	    @JoinColumn(name = "user_id", nullable = false, updatable = false) })
    public Set<User> getUsers() {
	return this.users;
    }

    public void setUsers(Set<User> users) {
	this.users = users;
    }

}
