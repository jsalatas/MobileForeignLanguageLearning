package gr.ictpro.mall.model;

// Generated Jan 11, 2016 9:44:52 PM by Hibernate Tools 4.0.0


import gr.ictpro.mall.interceptors.ClientReferenceClass;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.flex.core.io.AmfIgnore;

/**
 * Calendar generated by hbm2java
 */
@Entity
@Table(name = "calendar")
@ClientReferenceClass(className="gr.ictpro.mall.client.model.vo.Calendar")
public class Calendar implements java.io.Serializable, Comparable<Calendar> {
    /**
     * 
     */
    private static final long serialVersionUID = 1983605827043444625L;
    
    private Integer id;
    private Schedule schedule;
    private User user;
    private Classroom classroom;
    private Calendar masterEntry;
    private String description;
    private Date endTime;
    private Date startTime;
    private Set<Calendar> childEntries = new HashSet<Calendar>(0);

    public Calendar() {
    }

    public Calendar(String description, Date endTime, Date startTime) {
	this.description = description;
	this.endTime = endTime;
	this.startTime = startTime;
    }

    public Calendar(Schedule schedule, User user, Classroom classroom, Calendar masterEntry, String description,
	    Date endTime, Date startTime, Set<Calendar> childEntries) {
	this.schedule = schedule;
	this.user = user;
	this.classroom = classroom;
	this.masterEntry = masterEntry;
	this.description = description;
	this.endTime = endTime;
	this.startTime = startTime;
	this.childEntries = childEntries;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
	return this.id;
    }

    public void setId(Integer id) {
	this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "schedule_id")
    public Schedule getSchedule() {
	return this.schedule;
    }

    public void setSchedule(Schedule schedule) {
	this.schedule = schedule;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "user_id")
    public User getUser() {
	return this.user;
    }

    public void setUser(User user) {
	this.user = user;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "classroom_id")
    public Classroom getClassroom() {
	return this.classroom;
    }

    public void setClassroom(Classroom classroom) {
	this.classroom = classroom;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @AmfIgnore
    @JoinColumn(name = "master_id")
    public Calendar getMasterEntry() {
	return this.masterEntry;
    }

    public void setMasterEntry(Calendar masterEntry) {
	this.masterEntry = masterEntry;
    }

    @Column(name = "description", nullable = false, length = 255)
    public String getDescription() {
	return this.description;
    }

    public void setDescription(String description) {
	this.description = description;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "end_time", nullable = false, length = 19)
    public Date getEndTime() {
	return this.endTime;
    }

    public void setEndTime(Date endTime) {
	this.endTime = endTime;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "start_time", nullable = false, length = 19)
    public Date getStartTime() {
	return this.startTime;
    }

    public void setStartTime(Date startTime) {
	this.startTime = startTime;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "masterEntry")
    @AmfIgnore
    public Set<Calendar> getChildEntries() {
	return this.childEntries;
    }

    public void setChildEntries(Set<Calendar> childEntries) {
	this.childEntries = childEntries;
    }

    @Override
    public int compareTo(Calendar o) {
	if(this.startTime.compareTo(o.startTime) != 0) {
	    return this.startTime.compareTo(o.startTime);
	} 
	return this.endTime.compareTo(o.endTime);
    }

}
