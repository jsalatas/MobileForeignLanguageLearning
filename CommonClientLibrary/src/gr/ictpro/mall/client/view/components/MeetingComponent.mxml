<?xml version="1.0" encoding="utf-8"?>
<s:VOEditor xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="gr.ictpro.mall.client.components.*" width="100%" height="100%" xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:signals="org.osflash.signals.*">
	<s:states>
		<mx:State name="new" />
		<mx:State name="edit" />
	</s:states>

	<fx:Declarations>
		<signals:Signal id="timeChangedSignal" /> 
		<signals:Signal id="btnJoinClickedSignal" />
		<signals:Signal id="btnViewRecordingClickedSignal" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import gr.ictpro.mall.client.runtime.Device;

			[Bindable]
			public var _meetingTypes:ArrayCollection;
			
			[Bindable]
			public var isReadOnly:Boolean;

			public function set meetingTypes(meetingTypes:ArrayCollection):void
			{
				this._meetingTypes = meetingTypes;
			}
			
			override public function set vo(vo:Object):void
			{
				super.vo = vo;
				selectMeetingType();
			}

			protected function meetingTypePopup_initializeHandler(event:FlexEvent):void
			{
				selectMeetingType();
			}

			// set initial selected meeting type
			private function selectMeetingType():void {
				if( vo != null && vo.meetingType != null && meetingTypePopup != null) {
					meetingTypePopup.selected = vo.meetingType;
				}
			}
			
			protected function chkNow_clickHandler(event:MouseEvent):void
			{
//				if(chkNow.selected) {
//					time.enabled = false;
//					time.date = null;
//				} else {
//					time.enabled = true;
//					time.date = vo.time;
//				}
//				timeChangedSignal.dispatch();
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				btnJoinClickedSignal.dispatch();
				
			}
			
			protected function btnViewRecording_clickHandler(event:MouseEvent):void
			{
				btnViewRecordingClickedSignal.dispatch();
				
			}
			
		]]>
	</fx:Script>

	<s:layout>
		<s:FormLayout/>
	</s:layout>
	<s:FormItem width="100%" label="{Device.translations.getTranslation('Name')}">
		<s:TextInput id="txtName" width="100%" text="{vo.name}" textAlign="left" enabled="{!isReadOnly}"/>
	</s:FormItem>
	<s:FormItem width="100%" label="{Device.translations.getTranslation('Created By')}" includeIn="edit">
		<s:Label id="lblCreatedBy" width="100%" text="{vo.createdBy}" textAlign="left" />
	</s:FormItem>
	<s:FormItem width="100%" label="{Device.translations.getTranslation('Meeting Type')}" >
		<s:PopUpList id="meetingTypePopup" width="100%" dataList="{_meetingTypes}" textAlign="left" initialize="meetingTypePopup_initializeHandler(event)"  enabled="{!isReadOnly}"/>
	</s:FormItem>
	<s:FormItem width="100%" label="{Device.translations.getTranslation('Start at')}" >
		<s:DateTimePicker width="100%" id="time" date="{vo.time}"  enabled="{!isReadOnly}" /> 
	</s:FormItem>
<!--
	<s:FormItem width="100%" label="{Device.translations.getTranslation('Now')}" includeIn="new" >
		<s:CheckBox id="chkNow" click="chkNow_clickHandler(event)" enabled="{!isReadOnly}" /> 
	</s:FormItem>
-->	
	<s:FormItem id="frmRecord" width="100%" label="{Device.translations.getTranslation('Record')}" >
		<s:CheckBox id="chkRecord" selected="@{vo.record}" />
	</s:FormItem>
	<s:FormItem id="frmApprove" width="100%" label="{Device.translations.getTranslation('Approve')}"  >
		<s:CheckBox id="chkApprove" selected="@{vo.approve}" />
	</s:FormItem>
	<s:FormItem id="frmParentCanSeeRecording" width="100%" label="{Device.translations.getTranslation('Parent Can See Recording')}" >
		<s:CheckBox id="chkParentCanSeeRecording" selected="@{vo.parentCanSeeRecording}" />
	</s:FormItem>
	<s:FormItem id="frmUserIsApproved" width="100%" >
		<s:Label id="lblUserIsApproved" width="100%" textAlign="left" />
	</s:FormItem>
	<s:FormItem width="100%" >
		<s:Button id="btnJoinMeeting" label="{Device.translations.getTranslation('Join Meeting')}" click="button1_clickHandler(event)"  />
	</s:FormItem>
	<s:FormItem width="100%" >
		<s:Button id="btnViewRecording" label="{Device.translations.getTranslation('View Recording')}" click="btnViewRecording_clickHandler(event)" />
	</s:FormItem>

</s:VOEditor>
