<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="gr.ictpro.mall.client.components.*"
				autoDrawBackground="false" 
				xmlns:mx="library://ns.adobe.com/flex/mx">

	<fx:Script>
		<![CDATA[
			import flashx.textLayout.conversion.TextConverter;
			
			import gr.ictpro.mall.client.components.List;
			import gr.ictpro.mall.client.runtime.Device;
			
			import org.bigbluebutton.model.chat.ChatMessage;
			
			override public function set data(obj:Object):void {
				super.data = obj;
				var m:ChatMessage = obj as ChatMessage;
				if (m) {
					username.text = m.name;
					time.text = m.time
					if (!isHTMLString(m.senderText)) {
						message.text = m.senderText;
					} else {
						message.textFlow = TextConverter.importToFlow(m.senderText, TextConverter.TEXT_FIELD_HTML_FORMAT);
					}
					message.width = Device.getUnScaledSize(List(owner).width - Device.getScaledSize(15) - (List(owner).scroller.verticalScrollBar != null?List(owner).scroller.verticalScrollBar.width:0));
				}
			}
			
			/**
			 * Checks if message string contains opening and closing HTML tag e.g. <....>
			 **/
			public function isHTMLString(str:String):Boolean {
				var pattern:RegExp = new RegExp("(\<+.*\>+)");
				var result:Object = pattern.exec(str);
				if (result == null) {
					return false;
				}
				return true;
			}
			
			private function removeUnneededInformationFromDisplay(m:ChatMessage):void {
				var sameUser:Boolean = (m.lastSenderId == m.senderId);
				var sameTime:Boolean = (m.lastTime == m.time);
				if (sameUser && sameTime) {
					nameTimeGroup.includeInLayout = false;
				} else if (sameUser) {
					username.visible = false;
				} else if (sameTime) {
					time.visible = false;
				}
			}
		]]>
	</fx:Script>
	<s:states>
		<mx:State name="others_state" />
		<mx:State name="me_state" />
	</s:states>
	<s:Group width="100%">
		<s:layout>
			<s:VerticalLayout verticalAlign="middle" paddingLeft="5" paddingTop="10" paddingBottom="5" paddingRight="5"/>
		</s:layout>
		<s:Group id="nameTimeGroup"
				 width="100%">
			<s:layout>
				<s:HorizontalLayout />
			</s:layout>
			<s:Label id="username" width="50%" fontSize="{Device.getDefaultUnscaledFontSize()+2}" fontWeight="bold" color="{Device.getDefaultColor(0.6)}" />
			<s:Label id="time" width="50%" textAlign="right" color="{Device.getDefaultColor(0.6)}" />
		</s:Group>
		<s:Group >
			<s:RichEditableText editable="false" selectable="false" id="message" />
		</s:Group>
		<s:Group width="100%" height="1" >
			<s:Rect top="0" bottom="0" left="0" right="0">
				<s:fill>
					<s:SolidColor color="{Device.getDefaultColor(0.1)}" />
				</s:fill>
			</s:Rect>
		</s:Group>
	</s:Group>
</s:ItemRenderer>
