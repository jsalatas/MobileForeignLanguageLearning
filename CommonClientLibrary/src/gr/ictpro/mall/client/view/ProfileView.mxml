<?xml version="1.0" encoding="utf-8"?>
<s:TopBarGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="gr.ictpro.mall.client.components.*"
			   xmlns:signals="org.osflash.signals.*"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="100%" height="100%" backClicked="topbargroup1_backClickedHandler(event)"
			   cancelClicked="topbargroup1_cancelClickedHandler(event)"
			   implements="gr.ictpro.mall.client.model.DetailView, gr.ictpro.mall.client.model.ParameterizedView"
			   okClicked="topbargroup1_okClickedHandler(event)">
	<fx:Declarations>
		<signals:Signal id="save"/>
		<signals:Signal id="cancel"/>
		<signals:Signal id="back"/>
		<signals:Signal id="choosePhoto"/>
	</fx:Declarations>
	
	<s:states>
		<mx:State name="profile"/>
		<mx:State name="edit"/>
	</s:states>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.IVisualElement;
			import mx.core.IVisualElementContainer;
			import mx.utils.ObjectProxy;
			
			import gr.ictpro.mall.client.model.Device;
			import gr.ictpro.mall.client.model.Translation;
			import gr.ictpro.mall.client.model.User;
			
			[Bindable]
			public var user:User;
			
			private var _masterView:IVisualElement;
			
			private var _parameters:ObjectProxy;

			[Bindable]
			private var colorList:ArrayList = new ArrayList([
				0x000000, 
				0x333333, 
				0x585858, 
				0xff0000, 
				0xcc0000, 
				0xb10057, 
				0x990000, 
				0x960049, 
				0x830083, 
				0x7d003c,
				0x690069,
				0x5800b0, 
				0x4b0096,
				0x000066,
				0x000099,
				0x003194, 
				0x0000cc, 
				0x0000ff,  
				0x0042c6, 
				0x00476b, 
				0x005885, 
				0x005c4d, 
				0x00699e, 
				0x007562, 
				0x3e7d00, 
				0x009078, 
				0x4b9600, 
				0x58b000, 
				0x848400, 
				0x8f7700, 
				0x756200, 
				0x6b6b00, 
				0x5d5e00, 
				0x444500]);
			

			protected function topbargroup1_okClickedHandler(event:MouseEvent):void
			{
				save.dispatch();
			}
			
			protected function topbargroup1_cancelClickedHandler(event:MouseEvent):void
			{
				cancel.dispatch();
			}
			
			protected function topbargroup1_backClickedHandler(event:MouseEvent):void
			{
				back.dispatch();
				
			}
			
			public function dispose():void
			{
				if(parent && parent.contains(this)) {
					IVisualElementContainer(parent).removeElement(this);
				}
			}
			
			protected function imgPhoto_clickHandler(event:MouseEvent):void
			{
				choosePhoto.dispatch(event);
			}
			
			public function set masterView(masterView:IVisualElement):void 
			{
				this._masterView = masterView;
			}
			
			public function get masterView():IVisualElement
			{
				return this._masterView;
			}
 
			public function set parameters(parameters:ObjectProxy):void
			{
				this._parameters = parameters;
			}
			public function get parameters():ObjectProxy
			{
				return this._parameters;
			}

			
		]]>
	</fx:Script>
	<s:Group width="100%" height="100%">
		<s:layout>
			<s:VerticalLayout gap="10" horizontalAlign="center" paddingBottom="10" paddingLeft="10"
							  paddingRight="10" paddingTop="10"/>
		</s:layout>

		<s:Group id="imgContainer" width="154" height="204" click="imgPhoto_clickHandler(event)"
				 horizontalCenter="0">
			<s:Rect width="100%" height="100%">
				<s:fill><s:SolidColor color="{Device.getDefaultColor(0.67)}"/></s:fill>
			</s:Rect>
			<s:Group width="154" height="204">
				<s:layout>
					<s:VerticalLayout gap="0" horizontalAlign="center" paddingBottom="2"
									  paddingTop="2"/>
				</s:layout>
				<s:Image id="imgPhoto" width="150" height="200" source="{user.photo}"/>	
			</s:Group>
		</s:Group>

		<s:Group width="100%" maxWidth="{Device.isAndroid?NaN:500}" horizontalCenter="0"
				 verticalCenter="0">
			<s:layout>
				<s:FormLayout/>
			</s:layout>
			<s:FormItem width="100%" label="{Translation.getTranslation('Enabled')}"
						visible.edit="true"
						visible.profile="false">
				<s:CheckBox id="chkEnabled" selected="{user.enabled}"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('New Password')}">
				<s:TextInput id="txtPassword" width="100%" autoCapitalize="word"
							 displayAsPassword="true" text="" textAlign="left"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Reenter New Password')}">
				<s:TextInput id="txtPassword2" width="100%" autoCapitalize="word"
							 displayAsPassword="true" text="" textAlign="left"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Name')}">
				<s:TextInput id="txtName" width="100%" autoCapitalize="word" text="{user.name}"
							 textAlign="left"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Email')}">
				<s:TextInput id="txtEmail" width="100%" autoCorrect="false" softKeyboardType="email"
							 text="{user.email}" textAlign="left"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Color')}">
				<s:ColorSelectorPopUp id="popupColor" width="100%" dataList="{colorList}"
									  selected="{Device.getDefaultColor()}"/>
			</s:FormItem>
		</s:Group>

	</s:Group>
	
	
</s:TopBarGroup>
