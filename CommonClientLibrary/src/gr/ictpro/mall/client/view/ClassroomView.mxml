<?xml version="1.0" encoding="utf-8"?>
<s:TopBarDetailView xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="gr.ictpro.mall.client.components.*" width="100%" height="100%"
			   title.new="{Translation.getTranslation('New Classroom')}"
			   title.edit="{Translation.getTranslation('Edit Classroom')}"
			   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="gr.ictpro.mall.client.view.components.*">
	<s:states>
		<mx:State name="new" />
		<mx:State name="edit" />
	</s:states>

	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import gr.ictpro.mall.client.model.UserModel;
			import gr.ictpro.mall.client.model.vo.Classroom;
			import gr.ictpro.mall.client.model.vo.User;
			import gr.ictpro.mall.client.runtime.Device;
			import gr.ictpro.mall.client.runtime.Translation;
			
			[Bindable]
			private var _teachers:ArrayCollection;
			
			[Bindable]
			public var _languages:ArrayCollection;
			
			public var userModel:UserModel;
			
			public function set teachers(teachers:ArrayCollection):void
			{
				this._teachers = teachers;
				selectTeacher();
			}
			
			public function set languages(languages:ArrayCollection):void
			{
				this._languages = languages;
				selectLanguage();
			}
			
			protected function languagePopup_initializeHandler(event:FlexEvent):void
			{
				selectLanguage();
				
			}
			
			protected function teacherPopup_initializeHandler(event:FlexEvent):void
			{
				selectTeacher();
			}
			
			// set initial selected language
			private function selectLanguage():void {
				languagePopup.selected = null;
				if(_languages != null && parameters != null && parameters.vo != null && Classroom(parameters.vo).language != null && languagePopup != null) {
					languagePopup.selected = Classroom(parameters.vo).language;
				}
			}
			
			// set initial selected teacher
			private function selectTeacher():void {
				if(_teachers != null && parameters != null && parameters.vo != null && Classroom(parameters.vo).users != null && teacherPopup != null) {
					teacherPopup.selected = null;
					for each (var user:User in Classroom(parameters.vo).users) {
						if(userModel.isTeacher(user)) {
							teacherPopup.selected = user;
						}
					}
				}
				
			}
		]]>
	</fx:Script>
	<s:Group width="100%" maxWidth="{Device.isAndroid?NaN:500}" horizontalCenter="0">
		<s:layout>
			<s:VerticalLayout gap="5" horizontalAlign="center" />
		</s:layout>	
		<s:Group>
			<s:layout>
				<s:FormLayout/>
			</s:layout>
			<s:FormItem width="100%" label="{Translation.getTranslation('Name')}">
				<s:TextInput id="txtName" width="100%" text="{Classroom(parameters.vo).name}" textAlign="left"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Notes')}">
				<s:TextArea id="txtNotes" width="100%" text="{Classroom(parameters.vo).notes}" textAlign="left" height="100" maxHeight="100"/>
			</s:FormItem>
			<s:FormItem width="100%" label="{Translation.getTranslation('Language')}">
				<s:PopUpList id="languagePopup" dataList="{_languages}" textAlign="left" initialize="languagePopup_initializeHandler(event)" />
			</s:FormItem>
			<s:FormItem id="teacher" width="100%" label="{Translation.getTranslation('Teacher')}">
				<s:PopUpList id="teacherPopup" dataList="{_teachers}" textAlign="left" initialize="teacherPopup_initializeHandler(event)" />
			</s:FormItem>
		</s:Group>

		<components:TranslationManagerComponent vo="{parameters.vo}" state="{currentState}" />
	</s:Group>
</s:TopBarDetailView>
