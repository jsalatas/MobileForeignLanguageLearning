<?xml version="1.0" encoding="utf-8"?>
<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="gr.ictpro.mall.client.components.*"
					  skinClass="gr.ictpro.mall.client.components.skins.BorderContainer"
					  initialize="initializeHandler(event)"
					  addedToStage="addedToStageHandler(event)"
					  removed="removedFromStage(event)"
					  depth="10000" width="100%" height="100%" xmlns:mx="library://ns.adobe.com/flex/mx" >

	<fx:Metadata>
		[Event(name="change", type="flash.events.Event")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.managers.IFocusManagerComponent;
			
			private var listClicked:Boolean = false;
			
			private var _selected:Object = null;
			
			[Bindable]
			public function get selected():Object
			{
				return this._selected;
			}
			
			public function set selected(selected:Object):void
			{
				this._selected = selected;
				if(list != null) {
					list.selectedItem = selected;
				}
			}
			
			[Bindable]
			public var dataList:ArrayList;
			
			[Bindable]
			private var controlHeight:int=0;
			
			protected function group1_clickHandler(event:MouseEvent):void
			{
				listClicked = true;
				currentState="expand";
			}
			
			protected function list1_clickHandler(event:MouseEvent):void
			{
				selected = list.selectedItem;
				currentState = "collapse";
				dispatchEvent(new Event(Event.CHANGE));
			}
			
			protected function initializeHandler(event:Event):void
			{
				if(selected == null) {
					txt.text="Select Item";
				} else {
					list.selectedItem = selected;
				}
				controlHeight=height;
			}
			private function stageClickedHandler(event:Event):void
			{
				var ComponentWithFocus : IFocusManagerComponent= focusManager.getFocus();
				if(!listClicked && currentState == "expand") {
					lostFocus(event); 
				}
				listClicked = false;
			}
			protected function lostFocus(event:Event):void
			{
				listClicked = false;
				if(selected == null) {
					txt.text="Select Item";
				}
				currentState="collapse";
				dispatchEvent(new Event(Event.CHANGE));
				
			}
			
			protected function addedToStageHandler(event:Event):void
			{
				stage.addEventListener(MouseEvent.CLICK, stageClickedHandler);
				if(this.height == 0) {
					this.height = 20;
				}
			}
			
			protected function removedFromStage(event:Event):void
			{
				stage.removeEventListener(MouseEvent.CLICK, stageClickedHandler);
			}
			
		]]>
	</fx:Script>
	<s:states>
		<mx:State name="collapse"/>
		<mx:State name="expand"/>
	</s:states>
	<fx:Declarations>
	</fx:Declarations>
	<s:Group id="mainGroup" left="0" top="0" width="100%" height="{controlHeight}" click="group1_clickHandler(event)">
		
		<s:layout>
			<s:HorizontalLayout gap="2" verticalAlign="middle" />
		</s:layout>
		
		<s:Image id="img" source="{selected.image}" height="20" width="{selected.image==null?0:25}"/>
		<s:Label id="txt" text="{selected.text}" />
	</s:Group>
	<s:SkinnableContainer includeIn="expand" height="100" width="100%" x="0" y="{controlHeight}"
						  skinClass="gr.ictpro.mall.client.components.skins.BorderContainer" >
		
		<s:List id="list" itemRenderer="gr.ictpro.mall.client.components.renderers.ListRenderer" height="100" width="100%" includeIn="expand" dataProvider="{dataList}"  click="list1_clickHandler(event)" />
	</s:SkinnableContainer> 
	
</s:SkinnableContainer>
