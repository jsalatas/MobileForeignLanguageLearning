<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="gr.ictpro.mall.client.components.*"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:signals="org.osflash.signals.*" xmlns:buttons="org.bigbluebutton.view.navigation.pages.whiteboard.buttons.*">
	
	<fx:Script>
		<![CDATA[
			import mx.controls.SWFLoader;
			import mx.events.PropertyChangeEvent;
			
			import assets.fxg.butons.fitopage;
			import assets.fxg.butons.next;
			import assets.fxg.butons.previous;
			import assets.fxg.butons.upload;
			
			import gr.ictpro.mall.client.components.Group;
			
			import org.bigbluebutton.view.navigation.pages.whiteboard.WhiteboardCanvas;
			
			[Bindable]
			private var _whiteBoard:WhiteboardCanvas = null;
			
			public var content:Group = null;

			private var _slideLoader:SWFLoader = null;
			
			[Bindable]
			public var slideModel:SlideModel;
			
			public function set slideLoader(slideLoader:SWFLoader):void
			{
				_slideLoader = slideLoader;
			}
			
			public function get slideLoader():SWFLoader
			{
				return _slideLoader;
			}

			public var viewport:Group = null;

			public function get whiteBoard():WhiteboardCanvas 
			{
				return _whiteBoard;
			}
			public function set whiteBoard(whiteBoard:WhiteboardCanvas):void {
				if(_whiteBoard != null) {
					_whiteBoard.removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, zoomChanged);
				}
				_whiteBoard = whiteBoard;
				_whiteBoard.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, zoomChanged);
				zoomSlider.value = whiteBoard.zoom * 100; 
			}
			
			private function zoomChanged(event:PropertyChangeEvent):void
			{
				if(event.type == PropertyChangeEvent.PROPERTY_CHANGE && event.property == "zoom") {
					zoomSlider.value = _whiteBoard.zoom * 100;
				}
			}
			
			protected function uploadPres_clickHandler(event:MouseEvent):void
			{
				uploadPres.selected = false;
				uploadPresSignal.dispatch();
				
			}
			
			protected function backButton_clickHandler(event:MouseEvent):void
			{
				backButton.selected = false;
				backSignal.dispatch();
				
			}
			
			protected function zoomSlider_changeHandler(event:Event):void
			{
				zoomSignal.dispatch(zoomSlider.value);
			}
			
			protected function forwardButton_clickHandler(event:MouseEvent):void
			{
				forwardButton.selected = false;
				forwardSignal.dispatch();
				
			}
			
			protected function fitPageButton_clickHandler(event:MouseEvent):void
			{
				fitPageButton.selected = false;
				fitPageSignal.dispatch();				
			}

			protected function toggleButtonSelect(event:MouseEvent):void
			{
				var selectedButton:ToggleButton = ToggleButton(event.currentTarget);
				if(selectedButton == undoButton) {
					undoSignal.dispatch();
				} else if(selectedButton == clearButton) {
					clearSignal.dispatch();
				} 
				selectedButton.selected = false;
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<signals:Signal id="clearSignal" />
		<signals:Signal id="undoSignal" />
		<signals:Signal id="uploadPresSignal" />
		<signals:Signal id="backSignal" />
		<signals:Signal id="forwardSignal" />
		<signals:Signal id="zoomSignal" valueClasses="{[Number]}" />
		<signals:Signal id="fitPageSignal" />
		
	</fx:Declarations>
	<s:layout>
		<s:HorizontalLayout verticalAlign="middle" />
	</s:layout>
	<s:ToggleButton id="uploadPres" width="25" height="25" icon="{assets.fxg.butons.upload}" click="uploadPres_clickHandler(event)"/>
	<s:Spacer width="3" />
	<s:ToggleButton id="backButton" width="25" height="25" icon="{assets.fxg.butons.previous}" click="backButton_clickHandler(event)"/>
	<s:ToggleButton id="forwardButton" width="25" height="25" icon="{assets.fxg.butons.next}" click="forwardButton_clickHandler(event)"/>
	<s:Spacer width="3" />
	<s:HSlider id="zoomSlider" width="92" minimum="100" maximum="400" change="zoomSlider_changeHandler(event)" />
	<s:ToggleButton id="fitPageButton" width="25" height="25" icon="{assets.fxg.butons.fitopage}" click="fitPageButton_clickHandler(event)"/>
	<s:Spacer width="3" />
	<buttons:ClearButton id="clearButton" click="toggleButtonSelect(event)" />
	<buttons:UndoButton id="undoButton" click="toggleButtonSelect(event)" />
	
</s:Group>
